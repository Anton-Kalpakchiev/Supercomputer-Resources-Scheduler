uml diagram feedback - we need to hav eevery microservice with lollipop notation to note what is in every microservice


everyone tells what they did

 - try to have a "demo" of program to show something is working - with postman 

 - divide issues completely

 - talking about feedback on the context map: 
	- TA likes it
	- its logical
	- 1 DB per MS is fine

 - UML diagram needs reworking
	- not totally wrong
	- dont focus on small things like methods, but instead crete a diagram with Microservices and how they interact
	- show MSs and big components in each MS and how its organized and how they communicate, dont show too much detail w/ methods and so on
	- will probably need to change software to make it - maybe the one we did the context map with

 - about the class division regarding faculties and resource pools - if it works it should be fine

 - divide issues TOGETHER! If not happy, speak out loud now. If somebody is not satisfied with their group or has complaints, can talk with Natalia
 - testing : is code coverage important - every single class needs to be tested
	- test the controllers
	- test getters and setters
	- above 80% testing coverage should be fine
 - about the draft: explanaton is graded as well - should explain REASONING 
	 - explain number of MSs, why every MS is useful
	- other groups do less MSs
	- look at Natalia's feedback
	- should we have less MSs? - it's not a problem but it will lead to code duplication if separation is not good
	- about classes that are structures that we would like to have in other microservices: will need to implement several MSs
		- what about a common module - we can do that
	- when using postman you need to run all MSs before you can use it

 - when writing the converters - when storing a tuple, can we encode with a string and split it somehow, cannot use array or list, how should we do this -
 String is fine, but we should be able to store a list
 - design patterns: Natalia hasnt looked at those, but we will be refactoring the code later on so if we mess up now, we will be able to refactor them later
 - have to have the design patterns byt the 16th, not all code but the functionality of the design patterns - POSTPONED, IGNORE THIS LINE

 - feedback in general from Natalia
	 - work on UML
	 - show REASONING!!!! about MSs, number
	 - tell until the end of the weekend if we want the meeting next week
	 - about meeting maybe will be able to schedule for later on Thursday
	 - by Christmas break should be finished coding
	 - by 16th, design patterns, by 23rd full code - DESIGN PATTERNS GOT POSTPONED
	 - should not code after the deadline of the 23rd


 - how do MSs communicate with each other : same as postman but between themselves(w/ GET and POST requests)
